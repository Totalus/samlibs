/*
 * enc28j60_config.h
 *
 * Created: 2019-02-02 10:51:32 PM
 *  Author: Wizz
 */ 


#ifndef ENC28J60_CONFIG_H_
#define ENC28J60_CONFIG_H_

#define ENC28J60_SERCOM SERCOM0
#define ENC28J60_SERCOM_HANDLER	SERCOM0_Handler
#define ENC28J60_SERCOM_IRQ		SERCOM0_IRQn

#define ENC28J60_CS_pin	10
#define ENC28J60_CS_port GPIO_PORTA

#define ENC28J60_PIN_IRQ				GPIO(GPIO_PORTB, 10)
#define ENC28J60_FUNC_IRQ				PINMUX_PB10A_EIC_EXTINT10
#define ENC28J60_IRQ_EIC_CONFIGSENSE	EIC->CONFIG[1].bit.SENSE2
#define ENC28J60_IRQ_EIC_INTENSET		EIC->INTENSET.bit.EXTINT10

#define BAUDRATE(x) (CONF_CPU_FREQUENCY / (2 * x)) - 1
#define ENC28J60_SPI_BAUD	10000000

#define ENC28J60_PIN_MOSI	GPIO(GPIO_PORTA, 8)
#define ENC28J60_FUNC_MOSI	PINMUX_PA08C_SERCOM0_PAD0
#define ENC28J60_PIN_SCK	GPIO(GPIO_PORTA, 9)
#define ENC28J60_FUNC_SCK	PINMUX_PA09C_SERCOM0_PAD1
#define ENC28J60_PIN_MISO	GPIO(GPIO_PORTA, 11)
#define ENC28J60_FUNC_MISO	PINMUX_PA11C_SERCOM0_PAD3

#define ENC28J60_DIPO		0x03
#define ENC28J60_DOPO		0x00

#define ENC28J60_SERCOM_CLK	SERCOM0_GCLK_ID_CORE

uint32_t * const ENC28J60_SPI_CTRLA = &(ENC28J60_SERCOM->SPI.CTRLA.reg);
uint32_t * const ENC28J60_SPI_CTRLB = &(ENC28J60_SERCOM->SPI.CTRLB.reg);
uint8_t * const ENC28J60_SPI_INTENCLR = &(ENC28J60_SERCOM->SPI.INTENCLR.reg);
uint8_t * const ENC28J60_SPI_INTENSET = &(ENC28J60_SERCOM->SPI.INTENSET.reg);
uint8_t * const ENC28J60_SPI_INTFLAG = &(ENC28J60_SERCOM->SPI.INTFLAG.reg);
uint16_t * const ENC28J60_SPI_DATA = &(ENC28J60_SERCOM->SPI.DATA.reg);

uint32_t * const ENC28J60_NCS_OUTCLR = &(PORT_IOBUS->Group[ENC28J60_CS_port].OUTCLR.reg);
uint32_t * const ENC28J60_NCS_OUTSET = &(PORT_IOBUS->Group[ENC28J60_CS_port].OUTSET.reg);

#define ENC28J60_NCS_LOW() *ENC28J60_NCS_OUTCLR = 1 << ENC28J60_CS_pin;
#define ENC28J60_NCS_HIGH() *ENC28J60_NCS_OUTSET = 1 << ENC28J60_CS_pin;

#endif /* ENC28J60_CONFIG_H_ */